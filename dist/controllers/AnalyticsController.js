"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"AnalyticsController",{enumerable:true,get:function(){return AnalyticsController}});const _BaseController=require("./BaseController");const _AnalyticsQueries=require("../utils/queries/AnalyticsQueries");const _types=require("../types");const _URLShortenerQueries=require("../utils/queries/URLShortenerQueries");function _define_property(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class AnalyticsController extends _BaseController.BaseController{async getAliasAnalytics(req,res){try{const{alias}=req.params;if(!alias||alias.length!==6){return res.status(400).json({message:"Alias must be 6 characters long"})}const checkExistingAlias=await this.urlShortenerQueries.execCheckExistingAlias(alias);if(!checkExistingAlias.length){return res.status(400).json({message:"Alias does not exists"})}const urlId=this.getValues(await this.analyticsQueries.execGetAliasId(alias))[0];const aliasAnalytics=new _types.URLAnalytics;const totalClicks=this.getValues(await this.analyticsQueries.execGetTotalClicksByAlias(parseInt(urlId)));const uniqueClicks=this.getValues(await this.analyticsQueries.execGetUniqueClicksByAlias(parseInt(urlId)));const clicksByDate=await this.analyticsQueries.execGetClicksByDate(parseInt(urlId));const clicksByOSType=await this.analyticsQueries.execGetOSType(parseInt(urlId));const clicksByDeviceType=await this.analyticsQueries.execGetDeviceType(parseInt(urlId));aliasAnalytics.total_clicks=parseInt(totalClicks[0]);aliasAnalytics.unique_clicks=parseInt(uniqueClicks[0]);aliasAnalytics.clicks_by_date=clicksByDate;aliasAnalytics.os_type=clicksByOSType;aliasAnalytics.device_type=clicksByDeviceType;return res.status(200).json(aliasAnalytics)}catch(error){return res.status(400).json({message:error.message})}}async getTopicAnalytics(req,res){try{const user=req.user;const{topic}=req.params;if(!topic){return res.status(400).json({message:"Topic must be provided"})}const checkTopic=await this.analyticsQueries.execCheckTopic(topic);if(!checkTopic.length){return res.status(400).json({message:"Topic does not exists"})}const topicAnalytics=new _types.URLAnalytics;const totalClicks=this.getValues(await this.analyticsQueries.execGetTotalClicksByTopic(topic,user.user_id));const uniqueUsers=this.getValues(await this.analyticsQueries.execGetUniqueUsersByTopic(topic,user.user_id));const clicksByDate=await this.analyticsQueries.execGetTopicClicksByDate(topic,user.user_id);const urls=await this.analyticsQueries.execGetUrlsByTopic(topic,user.user_id);topicAnalytics.total_clicks=parseInt(totalClicks[0]);topicAnalytics.unique_clicks=parseInt(uniqueUsers[0]);topicAnalytics.clicks_by_date=clicksByDate;topicAnalytics.urls=urls;return res.status(200).json(topicAnalytics)}catch(error){return res.status(400).json({message:error.message})}}async getOverallAnalytics(req,res){try{const user=req.user;const overAllAnalytics=new _types.URLAnalytics;const totalUrls=this.getValues(await this.analyticsQueries.execGetTotalUrls(user.user_id));const totalClicks=this.getValues(await this.analyticsQueries.execGetTotalClicks(user.user_id));const uniqueUsers=this.getValues(await this.analyticsQueries.execGetTotalUniqueUsers(user.user_id));const clicksByDate=await this.analyticsQueries.execGetTotalClicsByDate(user.user_id);const clicksByOSType=await this.analyticsQueries.execGetTotalOSType(user.user_id);const clicksByDeviceType=await this.analyticsQueries.execGetTotalDeviceType(user.user_id);overAllAnalytics.total_urls=parseInt(totalUrls[0]);overAllAnalytics.total_clicks=parseInt(totalClicks[0]);overAllAnalytics.unique_clicks=parseInt(uniqueUsers[0]);overAllAnalytics.clicks_by_date=clicksByDate;overAllAnalytics.os_type=clicksByOSType;overAllAnalytics.device_type=clicksByDeviceType;return res.status(200).json(overAllAnalytics)}catch(error){return res.status(400).json({message:error.message})}}constructor(){super();_define_property(this,"analyticsQueries",void 0);_define_property(this,"urlShortenerQueries",void 0);this.analyticsQueries=new _AnalyticsQueries.AnalyticsQueries;this.urlShortenerQueries=new _URLShortenerQueries.URLShortenerQueries}}