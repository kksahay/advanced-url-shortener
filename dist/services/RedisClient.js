"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{RedisClient:function(){return RedisClient},redisClient:function(){return redisClient}});const _redis=require("redis");function _define_property(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class RedisClient{async initialize(){this.redisClient.on("error",async err=>{console.log("Could not establish a connection with redis. "+err);await this.redisClient.disconnect()});this.redisClient.on("connect",()=>{console.log("Connected to redis successfully")});await this.redisClient.connect()}async setKey(short_url,id,long_url){try{await this.redisClient.set(short_url,JSON.stringify({id,long_url}));await this.setExpiry(short_url)}catch(error){console.log(error)}}async getValue(short_url){try{const long_url=await this.redisClient.get(short_url);return long_url}catch(error){console.log(error);return null}}isLive(){return this.redisClient.isReady}async setExpiry(short_url){try{await this.redisClient.expire(short_url,30*24*60*60)}catch(error){console.log(error)}}constructor(){_define_property(this,"redisClient",void 0);this.redisClient=(0,_redis.createClient)();this.initialize()}}const redisClient=new RedisClient;